const { ipcRenderer } = require('electron');

// –ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è dock –ø–∞–Ω–µ–ª—å—é
class DockManager {
    constructor() {
        this.apps = this.loadApps();
        this.dragDropIndicator = document.getElementById('drag-drop-indicator');
        this.currentRightClickedItem = null;
        this.dragTimeout = null; // –¢–∞–π–º–∞—É—Ç –¥–ª—è debounce drag-and-drop
        this.isWindowPinned = true; // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è –æ–∫–Ω–∞
        
        this.initializeEventListeners();
        this.initializeDragDrop();
        this.renderApps();
        this.loadWindowPinState();
        
        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–æ–º–µ—Ä–æ–≤
        setTimeout(() => {
            this.updateAppNumbers();
        }, 100);
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –Ω–∞—Ç–∏–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é
        ipcRenderer.on('context-menu-action', (event, action) => {
            this.handleContextMenuAction(action);
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è –æ–∫–Ω–∞
        ipcRenderer.on('window-pin-changed', (event, isPinned) => {
            this.isWindowPinned = isPinned;
            this.updateWindowPinIndicator();
            this.showNotification(
                isPinned ? 'üìå –û–∫–Ω–æ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–æ' : 'üìå –û–∫–Ω–æ –æ—Ç–∫—Ä–µ–ø–ª–µ–Ω–æ - –º–æ–∂–Ω–æ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞—Ç—å',
                'info'
            );
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º–∏ –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        ipcRenderer.on('add-app-from-settings', (event, app) => {
            this.apps.push(app);
            this.saveApps();
            this.renderApps();
        });

        ipcRenderer.on('remove-app-from-settings', (event, appId) => {
            this.apps = this.apps.filter(a => a.id !== appId);
            this.saveApps();
            this.renderApps();
        });
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –∏–∑ localStorage
    loadApps() {
        const defaultApps = [
            { id: 'explorer', name: '–ü—Ä–æ–≤–æ–¥–Ω–∏–∫', icon: 'üìÅ', path: 'explorer' },
            { id: 'chrome', name: 'Chrome', icon: 'üåê', path: 'chrome' },
            { id: 'vscode', name: 'VS Code', icon: 'üíª', path: 'code' },
            { id: 'terminal', name: '–¢–µ—Ä–º–∏–Ω–∞–ª', icon: '‚ö°', path: 'cmd' },
            { id: 'calculator', name: '–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä', icon: 'üî¢', path: 'calc' },
            { id: 'settings', name: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏', icon: '‚öôÔ∏è', path: 'ms-settings:' }
        ];

        const saved = localStorage.getItem('dockApps');
        return saved ? JSON.parse(saved) : defaultApps;
    }

    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –≤ localStorage
    saveApps() {
        localStorage.setItem('dockApps', JSON.stringify(this.apps));
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è –æ–∫–Ω–∞
    async loadWindowPinState() {
        try {
            this.isWindowPinned = await ipcRenderer.invoke('get-window-pin-state');
            this.updateWindowPinIndicator();
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è –æ–∫–Ω–∞:', error);
        }
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è
    updateWindowPinIndicator() {
        const dockContainer = document.querySelector('.dock-container');
        
        if (this.isWindowPinned) {
            dockContainer.classList.remove('unpinned');
            dockContainer.title = 'Dock –∑–∞–∫—Ä–µ–ø–ª–µ–Ω';
        } else {
            dockContainer.classList.add('unpinned');
            dockContainer.title = 'Dock –Ω–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω - –º–æ–∂–Ω–æ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞—Ç—å';
        }
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
    initializeEventListeners() {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–æ–≤ –ø–æ —ç–ª–µ–º–µ–Ω—Ç–∞–º dock –ø–∞–Ω–µ–ª–∏
        document.addEventListener('click', (e) => {
            const dockItem = e.target.closest('.dock-item');
            if (dockItem) {
                this.handleDockItemClick(dockItem);
            }
        });

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∞–≤–æ–≥–æ –∫–ª–∏–∫–∞
        document.addEventListener('contextmenu', (e) => {
            e.preventDefault();
            const dockContainer = e.target.closest('.dock-container');
            if (dockContainer) {
                const dockItem = e.target.closest('.dock-item');
                this.showContextMenu(e, dockItem); // dockItem –º–æ–∂–µ—Ç –±—ã—Ç—å null
            }
        });

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ drag & drop
        this.setupDragDropHandlers();
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è –æ–∫–Ω–∞
        this.setupWindowDragHandlers();

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∞–≤–∏—à
        document.addEventListener('keydown', (e) => {
            // Escape - –∑–∞–∫—Ä—ã—Ç—å drag & drop –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
            if (e.key === 'Escape') {
                if (this.dragTimeout) {
                    clearTimeout(this.dragTimeout);
                    this.dragTimeout = null;
                }
                this.hideDragDropIndicator();
            }
            
            // Ctrl + H - —Å–∫—Ä—ã—Ç—å/–ø–æ–∫–∞–∑–∞—Ç—å dock
            if (e.ctrlKey && e.key === 'h') {
                e.preventDefault();
                this.handleSystemAction('toggle-dock');
            }
            
            // Ctrl + Q - –≤—ã—Ö–æ–¥ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            if (e.ctrlKey && e.key === 'q') {
                e.preventDefault();
                this.handleSystemAction('quit');
            }
            
            // F1 - –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å
            if (e.key === 'F1') {
                e.preventDefault();
                this.showHelp();
            }
            
            // –¶–∏—Ñ—Ä—ã 1-9 - –±—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
            if (e.key >= '1' && e.key <= '9') {
                const index = parseInt(e.key) - 1;
                this.launchAppByIndex(index);
            }
        });

        // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
        document.addEventListener('dragstart', (e) => {
            e.preventDefault();
        });
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–æ–≤ –ø–æ —ç–ª–µ–º–µ–Ω—Ç–∞–º dock –ø–∞–Ω–µ–ª–∏
    handleDockItemClick(dockItem) {
        const appId = dockItem.dataset.app;
        const action = dockItem.dataset.action;

        if (action) {
            this.handleSystemAction(action);
        } else if (appId) {
            this.launchApp(appId);
        }
    }

    // –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    async launchApp(appId) {
        const app = this.apps.find(a => a.id === appId);
        if (!app) return;

        try {
            // –î–æ–±–∞–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å
            const dockItem = document.querySelector(`[data-app="${appId}"]`);
            if (dockItem) {
                dockItem.style.transform = 'scale(0.95)';
                setTimeout(() => {
                    dockItem.style.transform = '';
                }, 150);
            }

            // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
            const result = await ipcRenderer.invoke('launch-app', app.path);
            
            if (!result.success) {
                this.showNotification(`–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å ${app.name}`, 'error');
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', error);
            this.showNotification(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ ${app.name}`, 'error');
        }
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
    async handleSystemAction(action) {
        switch (action) {
            case 'toggle-dock':
                await ipcRenderer.invoke('toggle-dock');
                break;
            case 'quit':
                await ipcRenderer.invoke('quit-app');
                break;
        }
    }

    // –ü–æ–∫–∞–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é
    showContextMenu(e, dockItem) {
        this.currentRightClickedItem = dockItem;
        
        let x, y;
        
        if (dockItem) {
            // –ï—Å–ª–∏ –∫–ª–∏–∫ –ø–æ —ç–ª–µ–º–µ–Ω—Ç—É, –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º –º–µ–Ω—é –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–∞
            const rect = dockItem.getBoundingClientRect();
            x = rect.left + rect.width / 2;
            y = rect.bottom + 10; // –†–∞–∑–º–µ—â–∞–µ–º –º–µ–Ω—é —Å–Ω–∏–∑—É –æ—Ç —ç–ª–µ–º–µ–Ω—Ç–∞
        } else {
            // –ï—Å–ª–∏ –∫–ª–∏–∫ –ø–æ —Å–≤–æ–±–æ–¥–Ω–æ–º—É –º–µ—Å—Ç—É, –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º –º–µ–Ω—é –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –∫—É—Ä—Å–æ—Ä–∞
            x = e.clientX;
            y = e.clientY + 10; // –†–∞–∑–º–µ—â–∞–µ–º –º–µ–Ω—é —á—É—Ç—å –Ω–∏–∂–µ –∫—É—Ä—Å–æ—Ä–∞
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—Ç–∏–≤–Ω–æ–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é
        ipcRenderer.invoke('show-context-menu', x, y, !!dockItem);
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–µ–π—Å—Ç–≤–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é
    handleContextMenuAction(action) {
        switch (action) {
            case 'remove-app':
                this.removeApp();
                break;
            case 'help':
                this.showHelp();
                break;
            case 'settings':
                this.showSettings();
                break;
        }
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è drag & drop
    initializeDragDrop() {
        const dockContainer = document.querySelector('.dock-container');
        
        // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –¥–ª—è drag & drop
        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
            dockContainer.addEventListener(eventName, this.preventDefaults, false);
            document.body.addEventListener(eventName, this.preventDefaults, false);
        });

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–∏ –≤—Ö–æ–¥–µ –≤ –∑–æ–Ω—É –∏–ª–∏ –¥–≤–∏–∂–µ–Ω–∏–∏ –Ω–∞–¥ –Ω–µ–π
        ['dragenter', 'dragover'].forEach(eventName => {
            dockContainer.addEventListener(eventName, (e) => {
                this.showDragDropIndicator();
                // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç —Å–∫—Ä—ã—Ç–∏—è
                if (this.dragTimeout) {
                    clearTimeout(this.dragTimeout);
                    this.dragTimeout = null;
                }
            }, false);
        });

        // –°–∫—Ä—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –∏–∑ –∑–æ–Ω—ã —Å –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π
        dockContainer.addEventListener('dragleave', (e) => {
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º debounce –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –º–∏–≥–∞–Ω–∏—è
            if (this.dragTimeout) {
                clearTimeout(this.dragTimeout);
            }
            this.dragTimeout = setTimeout(() => {
                this.hideDragDropIndicator();
            }, 50); // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –≤ 50ms
        }, false);

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ drop —Å–æ–±—ã—Ç–∏—è - —Å—Ä–∞–∑—É —Å–∫—Ä—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
        dockContainer.addEventListener('drop', (e) => {
            if (this.dragTimeout) {
                clearTimeout(this.dragTimeout);
                this.dragTimeout = null;
            }
            this.hideDragDropIndicator();
            this.handleDrop(e);
        }, false);

        // –°–±—Ä–æ—Å –ø—Ä–∏ –ø–æ—Ç–µ—Ä–µ —Ñ–æ–∫—É—Å–∞ –æ–∫–Ω–∞
        window.addEventListener('blur', () => {
            if (this.dragTimeout) {
                clearTimeout(this.dragTimeout);
                this.dragTimeout = null;
            }
            this.hideDragDropIndicator();
        });
    }

    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è
    preventDefaults(e) {
        e.preventDefault();
        e.stopPropagation();
    }

    // –ü–æ–∫–∞–∑ drag & drop –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞
    showDragDropIndicator() {
        this.dragDropIndicator.classList.add('show');
    }

    // –°–∫—Ä—ã—Ç–∏–µ drag & drop –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞
    hideDragDropIndicator() {
        this.dragDropIndicator.classList.remove('show');
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        if (this.dragTimeout) {
            clearTimeout(this.dragTimeout);
            this.dragTimeout = null;
        }
    }

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ drag & drop
    setupDragDropHandlers() {
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ drop —Å–æ–±—ã—Ç–∏—è
    handleDrop(e) {
        const files = e.dataTransfer.files;
        
        if (files.length > 0) {
            const file = files[0];
            this.addAppFromFile(file);
        }
    }

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞
    addAppFromFile(file) {
        const path = file.path;
        const name = file.name.replace(/\.[^/.]+$/, ""); // –£–±–∏—Ä–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ
        const icon = this.getIconForFile(file);

        const newApp = {
            id: `app_${Date.now()}`,
            name,
            icon,
            path
        };

        this.apps.push(newApp);
        this.saveApps();
        this.renderApps();
        this.showNotification(`–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ "${name}" –¥–æ–±–∞–≤–ª–µ–Ω–æ`);
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –¥–ª—è —Ñ–∞–π–ª–∞
    getIconForFile(file) {
        const extension = file.name.split('.').pop().toLowerCase();
        
        const iconMap = {
            'exe': 'üöÄ',
            'msi': 'üì¶',
            'bat': '‚ö°',
            'cmd': '‚ö°',
            'lnk': 'üîó',
            'app': 'üì±',
            'deb': 'üì¶',
            'rpm': 'üì¶',
            'dmg': 'üíø',
            'zip': 'üìÅ',
            'rar': 'üìÅ',
            'tar': 'üìÅ',
            'gz': 'üìÅ'
        };

        return iconMap[extension] || 'üöÄ';
    }

    // –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    removeApp() {
        if (!this.currentRightClickedItem) return;

        const appId = this.currentRightClickedItem.dataset.app;
        const app = this.apps.find(a => a.id === appId);

        if (app) {
            this.apps = this.apps.filter(a => a.id !== appId);
            this.saveApps();
            this.renderApps();
            this.showNotification(`–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ "${app.name}" —É–¥–∞–ª–µ–Ω–æ`);
        }
    }

    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
    renderApps() {
        const dockSection = document.querySelector('.dock-section');
        
        // –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–∞–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
        const allApps = dockSection.querySelectorAll('.dock-item[data-app]');
        allApps.forEach(item => item.remove());

        // –ó–∞–Ω–æ–≤–æ –æ—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –≤—Å–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏–∑ –º–∞—Å—Å–∏–≤–∞ this.apps
        this.apps.forEach(app => {
            const dockItem = this.createDockItem(app);
            dockSection.appendChild(dockItem);
        });

        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–º–µ—Ä–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
        this.updateAppNumbers();
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
    updateAppNumbers() {
        const dockItems = document.querySelectorAll('.dock-item[data-app]');
        dockItems.forEach((item, index) => {
            if (index < 9) { // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–æ–º–µ—Ä–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–µ—Ä–≤—ã—Ö 9 –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
                item.setAttribute('data-number', index + 1);
            } else {
                item.removeAttribute('data-number');
            }
        });
    }

    // –°–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ dock –ø–∞–Ω–µ–ª–∏
    createDockItem(app) {
        const dockItem = document.createElement('div');
        dockItem.className = 'dock-item';
        dockItem.dataset.app = app.id;
        dockItem.title = app.name;

        const dockIcon = document.createElement('div');
        dockIcon.className = 'dock-icon';
        dockIcon.textContent = app.icon;

        const dockTooltip = document.createElement('div');
        dockTooltip.className = 'dock-tooltip';
        dockTooltip.textContent = app.name;

        dockItem.appendChild(dockIcon);
        dockItem.appendChild(dockTooltip);

        return dockItem;
    }

    // –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    showNotification(message, type = 'info') {
        // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        const notification = document.createElement('div');
        notification.className = `notification ${type}`;
        notification.textContent = message;
        
        // –°—Ç–∏–ª–∏ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        Object.assign(notification.style, {
            position: 'fixed',
            top: '20px',
            right: '20px',
            background: type === 'error' ? '#ff4444' : '#007ACC',
            color: 'white',
            padding: '12px 16px',
            borderRadius: '8px',
            zIndex: '3000',
            fontSize: '14px',
            boxShadow: '0 4px 12px rgba(0, 0, 0, 0.3)',
            transition: 'all 0.3s ease'
        });

        document.body.appendChild(notification);

        // –£–¥–∞–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
            notification.style.opacity = '0';
            notification.style.transform = 'translateX(100%)';
            setTimeout(() => {
                if (notification.parentNode) {
                    notification.parentNode.removeChild(notification);
                }
            }, 300);
        }, 3000);
    }

    // –ü–æ–∫–∞–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    async showSettings() {
        try {
            await ipcRenderer.invoke('open-settings');
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error);
            this.showNotification('–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫', 'error');
        }
    }

    // –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø–æ –∏–Ω–¥–µ–∫—Å—É (–¥–ª—è –≥–æ—Ä—è—á–∏—Ö –∫–ª–∞–≤–∏—à)
    launchAppByIndex(index) {
        if (index >= 0 && index < this.apps.length) {
            const app = this.apps[index];
            this.launchApp(app.id);
            this.showNotification(`–ó–∞–ø—É—Å–∫: ${app.name} (${index + 1})`);
        }
    }

    // –ü–æ–∫–∞–∑ —Å–ø—Ä–∞–≤–∫–∏ –ø–æ –≥–æ—Ä—è—á–∏–º –∫–ª–∞–≤–∏—à–∞–º
    showHelp() {
        const helpText = `
üéØ –ì–û–†–Ø–ß–ò–ï –ö–õ–ê–í–ò–®–ò WINDOWS DOCK:

‚å®Ô∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:
‚Ä¢ Escape - –ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é/–æ–∫–Ω–∞
‚Ä¢ Ctrl + H - –°–∫—Ä—ã—Ç—å/–ø–æ–∫–∞–∑–∞—Ç—å –ø–∞–Ω–µ–ª—å
‚Ä¢ Ctrl + Q - –í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
‚Ä¢ F1 - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É

üöÄ –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫:
‚Ä¢ 1-9 - –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø–æ –Ω–æ–º–µ—Ä—É
‚Ä¢ –õ–µ–≤—ã–π –∫–ª–∏–∫ - –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
‚Ä¢ –ü—Ä–∞–≤—ã–π –∫–ª–∏–∫ - –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é

üìÅ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π:
‚Ä¢ –ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Ñ–∞–π–ª (.exe/.lnk) –Ω–∞ dock –ø–∞–Ω–µ–ª—å
‚Ä¢ –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–∞–∑–¥–µ–ª "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º–∏" –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö

üìå –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–∫–Ω–æ–º:
‚Ä¢ –ü—Ä–∞–≤—ã–π –∫–ª–∏–∫ ‚Üí "–ó–∞–∫—Ä–µ–ø–∏—Ç—å –æ–∫–Ω–æ" - –∑–∞–∫—Ä–µ–ø–∏—Ç—å/–æ—Ç–∫—Ä–µ–ø–∏—Ç—å dock
‚Ä¢ –ö–æ–≥–¥–∞ –æ–∫–Ω–æ –Ω–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–æ, –µ–≥–æ –º–æ–∂–Ω–æ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞—Ç—å –ø–æ —ç–∫—Ä–∞–Ω—É

üí° –ù–∞–≤–∏–≥–∞—Ü–∏—è:
‚Ä¢ Enter - –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ö
‚Ä¢ Tab - –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –ø–æ–ª—è–º–∏
‚Ä¢ –ù–∞–≤–µ–¥–µ–Ω–∏–µ - –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫—É
        `;
        
        // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏
        const helpModal = document.createElement('div');
        helpModal.className = 'modal show';
        helpModal.innerHTML = `
            <div class="modal-content" style="max-width: 500px;">
                <h3>üìñ –°–ø—Ä–∞–≤–∫–∞ –ø–æ –≥–æ—Ä—è—á–∏–º –∫–ª–∞–≤–∏—à–∞–º</h3>
                <pre style="font-family: 'Segoe UI', sans-serif; font-size: 13px; line-height: 1.4; color: #333; background: rgba(0,0,0,0.05); padding: 15px; border-radius: 8px; white-space: pre-wrap; margin: 15px 0;">${helpText}</pre>
                <div class="form-buttons">
                    <button type="button" onclick="this.closest('.modal').remove()">–ó–∞–∫—Ä—ã—Ç—å</button>
                </div>
            </div>
        `;
        
        document.body.appendChild(helpModal);
        
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        helpModal.addEventListener('click', (e) => {
            if (e.target === helpModal) {
                helpModal.remove();
            }
        });
    }

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è –æ–∫–Ω–∞
    setupWindowDragHandlers() {
        const dockContainer = document.querySelector('.dock-container');
        let isDragging = false;
        let mouseOffset = { x: 0, y: 0 }; // –°–º–µ—â–µ–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–∞ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –æ–∫–Ω–∞
        
        dockContainer.addEventListener('mousedown', async (e) => {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–∫–Ω–æ –Ω–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–æ –∏ –∫–ª–∏–∫ –Ω–µ –ø–æ —ç–ª–µ–º–µ–Ω—Ç—É dock-item
            if (!this.isWindowPinned && !e.target.closest('.dock-item')) {
                isDragging = true;
                
                // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –ø–æ–∑–∏—Ü–∏—é –æ–∫–Ω–∞
                try {
                    const windowPos = await ipcRenderer.invoke('get-window-position');
                    
                    // –í—ã—á–∏—Å–ª—è–µ–º —Å–º–µ—â–µ–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–∞ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –æ–∫–Ω–∞ (–æ–¥–∏–Ω —Ä–∞–∑)
                    mouseOffset.x = e.screenX - windowPos.x;
                    mouseOffset.y = e.screenY - windowPos.y;
                } catch (error) {
                    console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏ –æ–∫–Ω–∞:', error);
                    mouseOffset = { x: 0, y: 0 };
                }
                
                // –î–æ–±–∞–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω—ã–µ –∫–ª–∞—Å—Å—ã –¥–ª—è –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
                dockContainer.classList.add('dragging');
                
                // –û—Ç–∫–ª—é—á–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏–∏ –∏ –ø–µ—Ä–µ—Ö–æ–¥—ã –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
                const style = document.createElement('style');
                style.id = 'drag-disable-transitions';
                style.textContent = `
                    * {
                        transition: none !important;
                        animation: none !important;
                    }
                `;
                document.head.appendChild(style);
                
                dockContainer.style.cursor = 'grabbing';
                dockContainer.style.userSelect = 'none';
                e.preventDefault();
                
                // –û—Ç–∫–ª—é—á–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ
                document.body.style.pointerEvents = 'none';
                dockContainer.style.pointerEvents = 'auto';
            }
        });

        document.addEventListener('mousemove', (e) => {
            if (isDragging) {
                // –ü—Ä–æ—Å—Ç–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–∫–Ω–æ –≤ –ø–æ–∑–∏—Ü–∏—é –∫—É—Ä—Å–æ—Ä–∞ –º–∏–Ω—É—Å —Å–º–µ—â–µ–Ω–∏–µ
                const windowX = e.screenX - mouseOffset.x;
                const windowY = e.screenY - mouseOffset.y;
                
                try {
                    ipcRenderer.sendSync('move-window-absolute', windowX, windowY);
                } catch (error) {
                    console.error('–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –æ–∫–Ω–∞:', error);
                }
            }
        });

        document.addEventListener('mouseup', () => {
            if (isDragging) {
                isDragging = false;
                dockContainer.classList.remove('dragging');
                
                // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏–∏ –∏ –ø–µ—Ä–µ—Ö–æ–¥—ã
                const disableStyle = document.getElementById('drag-disable-transitions');
                if (disableStyle) {
                    disableStyle.remove();
                }
                
                dockContainer.style.cursor = '';
                dockContainer.style.userSelect = '';
                document.body.style.pointerEvents = '';
                dockContainer.style.pointerEvents = '';
            }
        });

        // –û—Ç–º–µ–Ω–∞ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è –ø—Ä–∏ –ø–æ—Ç–µ—Ä–µ —Ñ–æ–∫—É—Å–∞
        window.addEventListener('blur', () => {
            if (isDragging) {
                isDragging = false;
                dockContainer.classList.remove('dragging');
                
                // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏–∏ –∏ –ø–µ—Ä–µ—Ö–æ–¥—ã
                const disableStyle = document.getElementById('drag-disable-transitions');
                if (disableStyle) {
                    disableStyle.remove();
                }
                
                dockContainer.style.cursor = '';
                dockContainer.style.userSelect = '';
                document.body.style.pointerEvents = '';
                dockContainer.style.pointerEvents = '';
            }
        });

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ Escape –¥–ª—è –æ—Ç–º–µ–Ω—ã –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape' && isDragging) {
                isDragging = false;
                dockContainer.classList.remove('dragging');
                
                // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏–∏ –∏ –ø–µ—Ä–µ—Ö–æ–¥—ã
                const disableStyle = document.getElementById('drag-disable-transitions');
                if (disableStyle) {
                    disableStyle.remove();
                }
                
                dockContainer.style.cursor = '';
                dockContainer.style.userSelect = '';
                document.body.style.pointerEvents = '';
                dockContainer.style.pointerEvents = '';
            }
        });
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è dock –ø–∞–Ω–µ–ª–∏ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
document.addEventListener('DOMContentLoaded', () => {
    window.dockManager = new DockManager();
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
window.addEventListener('load', () => {
    console.log('Windows Dock –∑–∞–≥—Ä—É–∂–µ–Ω');
}); 